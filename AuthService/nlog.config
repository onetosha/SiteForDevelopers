<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="${basedir}\temp\internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
		<add assembly="NLog.Database"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="allfile" fileName="${basedir}\temp\nlog-AspNetCore-all-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web" fileName="${basedir}\temp\nlog-AspNetCore-own-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />

		<target xsi:type="Database"
        name="databaseTarget"
        dbProvider="Npgsql.NpgsqlConnection, Npgsql"
        connectionString="Host=localhost:5432;Database=DBAuth;Username=postgres;Password=1234">
			<commandText>
				INSERT INTO "Logs" (date, level, logger, responsetime, message, username, exception, statuscode, url, action)
				VALUES (@longdate, @level, @logger, @responsetime, @message, @username, @exception, @statuscode, @url, @action);
			</commandText>
			<parameter name="@longdate" layout="${longdate}" />
			<parameter name="@level" layout="${level:uppercase=true}" />
			<parameter name="@logger" layout="${logger}" />
			<parameter name="@responsetime" layout="${event-properties:item=responseTime}" />
			<parameter name="@message" layout="${message}" />
			<parameter name="@username" layout="${event-properties:item=userName}" />
			<parameter name="@exception" layout="${exception:format=tostring}" />
			<parameter name="@statuscode" layout="${event-properties:item=statusCode}" />
			<parameter name="@url" layout="${aspnet-request-url}" />
			<parameter name="@action" layout="${aspnet-mvc-action}" />
		</target>
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="allfile" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />

		<logger name="*" minlevel="Warn" writeTo="ownFile-web" />

		<logger name="*" minlevel="Info" writeTo="databaseTarget" />
	</rules>
</nlog>